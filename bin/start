#!/usr/bin/env bash

function javaVersion() {
   local ver=$(java -version 2>&1 | grep -i version | cut -d'"' -f2 | cut -d'.' -f1-2)
   if [[ ${ver} = "1."* ]]
       then
           ver=$(echo ${ver} | sed -e 's/1\.\([0-9]*\)\(.*\)/\1/; 1q')
       else
           ver=$(echo ${ver} | sed -e 's/\([0-9]*\)\(.*\)/\1/; 1q')
   fi
   echo ${ver}
}

JAVA_VERSION=$(javaVersion)

DEBUG=true

DEBUG_PORT=8000

if [ ${DEBUG} = true ]; then
	DEBUG_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${DEBUG_PORT}"
fi

JVM_OPTS="-server -Xms256m -Xmx512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m ${DEBUG_OPTS}"

# Add the [java.xml.bind] module if Java version is greater than 8, otherwise some of the bundles will not start.
if [ ${JAVA_VERSION} -gt 8 ]; then
  JVM_OPTS="--add-modules java.xml.bind "${JVM_OPTS}
fi

ADEPTJ_RUNTIME_OPTS="${JVM_OPTS}
 -Dadeptj.rt.port=9007 \
 -Dadeptj.rt.port.check=false \
 -Dadeptj.rt.mode=PROD \
 -Denable.http2=true \
 -Dlog.async=true \
 -Dlog.immediate.flush=true \
 -Dfelix.log.level=3 \
 -Dbenchmark.bundle.start=true \
 -Dprovision.bundles.explicitly=false \
 -Dshutdown.wait.time=60000 \
 -Dadeptj.session.timeout=3600 \
 -Dmax.concurrent.requests=5000 \
 -Denable.req.buffering=true \
 -Dreq.buff.maxBuffers=200 \
 -Duse.provided.keyStore=false \
 -Djavax.net.ssl.keyStore=path-to-local-java-keystore \
 -Djavax.net.ssl.keyStorePassword=java-keystore-password \
 -Djavax.net.ssl.keyPassword=key-password"

cd target

java ${ADEPTJ_RUNTIME_OPTS} -jar adeptj-runtime.jar